phenofit_site(y = y[, 1], t = date, w = d_qc$w, QC_flag = d_qc$QC_flag,
nptperyear = 36,
prefix = "", titlestr = titlestr, show = FALSE)
load_all("../..")
phenofit_site(y = y[, 1], t = date, w = d_qc$w, QC_flag = d_qc$QC_flag,
nptperyear = 36,
prefix = "", titlestr = titlestr, show = FALSE)
load_all("../..")
phenofit_site(y = y[, 1], t = date, w = d_qc$w, QC_flag = d_qc$QC_flag,
nptperyear = 36,
prefix = "", titlestr = titlestr, show = FALSE)
dt[, `:=`(season = as.numeric(1:.N), flag = sprintf("%d_%d", year, 1:.N)), .(year)]
cc
load_all("../..")
phenofit_site(y = y[, 1], t = date, w = d_qc$w, QC_flag = d_qc$QC_flag,
nptperyear = 36,
prefix = "", titlestr = titlestr, show = FALSE)
phenofit_site(y = y[, 1], t = date, w = d_qc$w, QC_flag = d_qc$QC_flag,
nptperyear = 36,
prefix = "", titlestr = titlestr, show = FALSE)
source("test/load_pkgs.R")
# add date
d_date <- fread("inst/extdata/dates_SPOT.txt")
date   = as.POSIXct(d_date$mid) %>% date()
# NC file
file = "inst/extdata/NDVI_SPOT_TP_GRID.nc"
fid  <- nc_open(file)
mat_grid <- ncvar_get(fid, "grid")
I_grid   <- fid$dim$Id$vals %>% set_dim(NULL)
l_ind    <- chunk(seq_along(I_grid), 1000)
outdir   = "OUTPUT"
check_dir(outdir)
InitCluster(12)
temp <- foreach(inds = l_ind[grps], grp = grps, icount()) %do% {
runningId(grp)
I_begin  = min(inds)
n_time   = length(inds)
mat_NDVI = ncvar_get(fid, "NDVI"      , start = c(I_begin, 1), count = c(n_time, -1)) %>% t()
mat_qc   = ncvar_get(fid, "VI_quality", start = c(I_begin, 1), count = c(n_time, -1)) %>% t()
# browser()
# profvis::profvis({
l_pheno = foreach(y = mat_NDVI, qc = mat_qc, j = icount()) %dopar% {
Ipaper::runningId(j)
# titlestr = "a"N
# titlestr = glue("[{i}] {site}")
d_qc = qc_SPOT(qc, wmin = 0.2)
# browser()
# if titlestr == NULL, then no figure produced; if show, then it will be open
ans = tryCatch(
phenofit_site(y = y[, 1], t = date, w = d_qc$w, QC_flag = d_qc$QC_flag,
nptperyear = 36,
prefix = "", titlestr = titlestr, show = FALSE),
error = function(e){
message(sprintf("e: [%04d] %s", j, e$message))
}
)
}
# })
df = l_pheno %>% set_names(inds[1:length(l_pheno)]) %>% rm_empty() %>% melt_list("I_grid")
outfile = sprintf("%s/phenofit_TP_SPOT_(1998-2013)_112deg_[%04d].csv", outdir, grp)
fwrite(df, outfile)
}
grps = 482:1
temp <- foreach(inds = l_ind[grps], grp = grps, icount()) %do% {
runningId(grp)
I_begin  = min(inds)
n_time   = length(inds)
mat_NDVI = ncvar_get(fid, "NDVI"      , start = c(I_begin, 1), count = c(n_time, -1)) %>% t()
mat_qc   = ncvar_get(fid, "VI_quality", start = c(I_begin, 1), count = c(n_time, -1)) %>% t()
# browser()
# profvis::profvis({
l_pheno = foreach(y = mat_NDVI, qc = mat_qc, j = icount()) %dopar% {
Ipaper::runningId(j)
# titlestr = "a"N
# titlestr = glue("[{i}] {site}")
d_qc = qc_SPOT(qc, wmin = 0.2)
# browser()
# if titlestr == NULL, then no figure produced; if show, then it will be open
ans = tryCatch(
phenofit_site(y = y[, 1], t = date, w = d_qc$w, QC_flag = d_qc$QC_flag,
nptperyear = 36,
prefix = "", titlestr = titlestr, show = FALSE),
error = function(e){
message(sprintf("e: [%04d] %s", j, e$message))
}
)
}
# })
df = l_pheno %>% set_names(inds[1:length(l_pheno)]) %>% rm_empty() %>% melt_list("I_grid")
outfile = sprintf("%s/phenofit_TP_SPOT_(1998-2013)_112deg_[%04d].csv", outdir, grp)
fwrite(df, outfile)
}
source("test/load_pkgs.R")
devtools::load_all()
# add date
d_date <- fread("inst/extdata/dates_SPOT.txt")
date   = as.POSIXct(d_date$mid) %>% date()
# NC file
file = "inst/extdata/NDVI_SPOT_TP_GRID.nc"
fid  <- nc_open(file)
mat_grid <- ncvar_get(fid, "grid")
I_grid   <- fid$dim$Id$vals %>% set_dim(NULL)
l_ind    <- chunk(seq_along(I_grid), 1000)
outdir   = "OUTPUT"
check_dir(outdir)
InitCluster(12)
grps = 482:1
temp <- foreach(inds = l_ind[grps], grp = grps, icount()) %do% {
runningId(grp)
I_begin  = min(inds)
n_time   = length(inds)
mat_NDVI = ncvar_get(fid, "NDVI"      , start = c(I_begin, 1), count = c(n_time, -1)) %>% t()
mat_qc   = ncvar_get(fid, "VI_quality", start = c(I_begin, 1), count = c(n_time, -1)) %>% t()
# browser()
# profvis::profvis({
l_pheno = foreach(y = mat_NDVI, qc = mat_qc, j = icount()) %dopar% {
Ipaper::runningId(j)
# titlestr = "a"N
# titlestr = glue("[{i}] {site}")
d_qc = qc_SPOT(qc, wmin = 0.2)
# browser()
# if titlestr == NULL, then no figure produced; if show, then it will be open
ans = tryCatch(
phenofit_site(y = y[, 1], t = date, w = d_qc$w, QC_flag = d_qc$QC_flag,
nptperyear = 36,
prefix = "", titlestr = titlestr, show = FALSE),
error = function(e){
message(sprintf("e: [%04d] %s", j, e$message))
}
)
}
# })
df = l_pheno %>% set_names(inds[1:length(l_pheno)]) %>% rm_empty() %>% melt_list("I_grid")
outfile = sprintf("%s/phenofit_TP_SPOT_(1998-2013)_112deg_[%04d].csv", outdir, grp)
fwrite(df, outfile)
}
grps = 482
grps = 482
temp <- foreach(inds = l_ind[grps], grp = grps, icount()) %do% {
runningId(grp)
I_begin  = min(inds)
n_time   = length(inds)
mat_NDVI = ncvar_get(fid, "NDVI"      , start = c(I_begin, 1), count = c(n_time, -1)) %>% t()
mat_qc   = ncvar_get(fid, "VI_quality", start = c(I_begin, 1), count = c(n_time, -1)) %>% t()
# browser()
# profvis::profvis({
l_pheno = foreach(y = mat_NDVI, qc = mat_qc, j = icount()) %dopar% {
Ipaper::runningId(j)
# titlestr = "a"N
# titlestr = glue("[{i}] {site}")
d_qc = qc_SPOT(qc, wmin = 0.2)
# browser()
# if titlestr == NULL, then no figure produced; if show, then it will be open
ans = tryCatch(
phenofit_site(y = y[, 1], t = date, w = d_qc$w, QC_flag = d_qc$QC_flag,
nptperyear = 36,
prefix = "", titlestr = titlestr, show = FALSE),
error = function(e){
message(sprintf("e: [%04d] %s", j, e$message))
}
)
}
# })
df = l_pheno %>% set_names(inds[1:length(l_pheno)]) %>% rm_empty() %>% melt_list("I_grid")
outfile = sprintf("%s/phenofit_TP_SPOT_(1998-2013)_112deg_[%04d].csv", outdir, grp)
fwrite(df, outfile)
}
devtools::load_all(".")
subl()
year = 2000
as.Date("2000049", "%Y%j")
date_begin = make_date(year, 1, 1)
date_end = make_date(year, 12, 31)
if (year == 2000) {
date_begin = make_date(2000, 2, 18)
}
seq(date_begin, date_end, "8days")
library(lubridate)
date_begin = make_date(year, 1, 1)
date_end = make_date(year, 12, 31)
if (year == 2000) {
date_begin = make_date(2000, 2, 18)
}
seq(date_begin, date_end, "8days")
seq(date_begin, date_end, "days")
date_begin = make_date(year, 1, 1)
date_end = make_date(year, 12, 31)
if (year == 2000) {
date_begin = make_date(2000, 2, 18)
}
seq(date_begin, date_end, "8days")[seq(1, 365, 8)]
date_begin = make_date(year, 1, 1)
date_end = make_date(year, 12, 31)
if (year == 2000) {
date_begin = make_date(2000, 2, 18)
}
seq(date_begin, date_end, "days")[seq(1, 365, 8)]
doy_begin = ifelse(year == 2000, 49, 1)
dates = seq(doy_begin, 365, 8) + year*1e3
dates
as.Date(dates, "%Y%j")
as.Date(as.character(dates), "%Y%j")
leap_year(year)
begin = ifelse(year == 2000, 49, 1)
doy_begin = seq(begin, 365, 8)
doy_end   = seq(begin+7, leap_year(year)+15, 8)
date_begin
doy_begin
doy_end
doy_end   = seq(begin+7, leap_year(year)+365, 8)
doy_end
doy_end   = seq(begin+15, leap_year(year)+365, 8)
seq(begin+15, leap_year(year)+365, 8)
seq(1+15, leap_year(year)+365, 8)
seq(1+15, 365, 8) %>% c(leap_year(year)+365)
dn = 16
begin = ifelse(year == 2000, 49, 1)
doy_begin = seq(begin     , 365, dn)
doy_end   = seq(begin+dn-1, 365, dn) %>% c(leap_year(year)+365)
doy_end
doy_begin
doy   = round((doy_begin + doy_end)/2)
doy
133/2
get_dates.MODIS <- function(year, dn = 16){
begin = ifelse(year == 2000, 49, 1)
doy_begin = seq(begin     , 365, dn)
doy_end   = seq(begin+dn-1, 365, dn) %>% c(leap_year(year)+365)
doy   = round((doy_begin + doy_end)/2) # nearly floor
dates = doy + year*1e3
as.Date(as.character(dates), "%Y%j")
}
get_dates.MODIS(2002)
dates = map(2000:2019, get_date_MODIS) %>% unlist()
get_date_MODIS <- function(year, dn = 16){
begin = ifelse(year == 2000, 49, 1)
doy_begin = seq(begin     , 365, dn)
doy_end   = seq(begin+dn-1, 365, dn) %>% c(leap_year(year)+365)
doy   = round((doy_begin + doy_end)/2) # nearly floor
dates = doy + year*1e3
as.Date(as.character(dates), "%Y%j")
}
dates = map(2000:2019, get_date_MODIS) %>% unlist()
dates
get_date_MODIS <- function(year, dn = 16){
begin = ifelse(year == 2000, 49, 1)
doy_begin = seq(begin     , 365, dn)
doy_end   = seq(begin+dn-1, 365, dn) %>% c(leap_year(year)+365)
doy   = round((doy_begin + doy_end)/2) # nearly floor
dates = doy + year*1e3
as.Date(as.character(dates), "%Y%j")
}
dates = map(2000:2019, get_date_MODIS) %>% do.call(c, .)
dates
load("/INPUT/TP_MOD13C1_020deg (200002-201909).rda")
load("INPUT/TP_MOD13C1_020deg (200002-201909).rda")
source("test/load_pkgs.R")
devtools::load_all()
#' middle of dn period
get_date_MODIS <- function(year, dn = 16){
begin = ifelse(year == 2000, 49, 1)
doy_begin = seq(begin     , 365, dn)
doy_end   = seq(begin+dn-1, 365, dn) %>% c(leap_year(year)+365)
doy   = round((doy_begin + doy_end)/2) # nearly floor
dates = doy + year*1e3
as.Date(as.character(dates), "%Y%j")
}
# 只到2015即可
dates = map(2000:2018, get_date_MODIS) %>% unlist()
ntime = length(dates)
# NC file
load("/INPUT/TP_MOD13C1_020deg (200002-201909).rda")
# NC file
load("INPUT/TP_MOD13C1_020deg (200002-201909).rda")
# 只到2015即可
dates = map(2000:2018, get_date_MODIS) %>% unlist()
#' middle of dn period
get_date_MODIS <- function(year, dn = 16){
begin = ifelse(year == 2000, 49, 1)
doy_begin = seq(begin     , 365, dn)
doy_end   = seq(begin+dn-1, 365, dn) %>% c(leap_year(year)+365)
doy   = round((doy_begin + doy_end)/2) # nearly floor
dates = doy + year*1e3
as.Date(as.character(dates), "%Y%j")
}
# 只到2015即可
dates = map(2000:2018, get_date_MODIS) %>% unlist()
ntime = length(dates)
# NC file
load("INPUT/TP_MOD13C1_020deg (200002-201909).rda")
NDVI = NDVI[, 1:ntime]
QC   = QC[, 1:ntime]
summmary(as.numeric(QC))
summary(as.numeric(QC))
# 只到2015即可
dates = map(2000:2018, get_date_MODIS) %>% unlist()
ntime = length(dates)
# NC file
load("INPUT/TP_MOD13C1_020deg (200002-201909).rda")
NDVI = NDVI[, 1:ntime]
QC   = QC[, 1:ntime]
QC[QC == 4] = 1 # From MODIS historic time series, treated as marginal
devtools::load_all(".")
l_ind    <- chunk(seq_along(I_mod), 1000)
# InitCluster(12)
grps = 65:1
temp <- foreach(inds = l_ind[grps], grp = grps, icount()) %do% {
runningId(grp)
I_begin  = min(inds)
n_time   = length(inds)
mat_NDVI = NDVI[inds, ] %>% t()
mat_qc   = QC[inds. ]   %>% t()
# browser()
# profvis::profvis({
l_pheno = foreach(y = mat_NDVI, qc = mat_qc, j = icount(1)) %do% {
Ipaper::runningId(j)
# titlestr = "a"
titlestr = glue("[{J}]")
d_qc = qc_summary(qc, wmin = 0.2)
# browser()
# if titlestr == NULL, then no figure produced; if show, then it will be open
ans = tryCatch(
phenofit_site(y = y[, 1], t = date, w = d_qc$w, QC_flag = d_qc$QC_flag,
nptperyear = 36,
prefix = "", titlestr = titlestr, show = TRUE),
error = function(e){
message(sprintf("e: [%04d] %s", j, e$message))
}
)
}
# })
df = l_pheno %>% set_names(inds[1:length(l_pheno)]) %>% rm_empty() %>% melt_list("I_grid")
# outfile = sprintf("%s/phenofit_TP_SPOT_(1998-2013)_112deg_[%04d].csv", outdir, grp)
# fwrite(df, outfile)
}
temp <- foreach(inds = l_ind[grps], grp = grps, icount()) %do% {
runningId(grp)
I_begin  = min(inds)
n_time   = length(inds)
mat_NDVI = NDVI[inds, ] %>% t()
mat_qc   = QC[inds, ]   %>% t()
# browser()
# profvis::profvis({
l_pheno = foreach(y = mat_NDVI, qc = mat_qc, j = icount(1)) %do% {
Ipaper::runningId(j)
# titlestr = "a"
titlestr = glue("[{J}]")
d_qc = qc_summary(qc, wmin = 0.2)
# browser()
# if titlestr == NULL, then no figure produced; if show, then it will be open
ans = tryCatch(
phenofit_site(y = y[, 1], t = date, w = d_qc$w, QC_flag = d_qc$QC_flag,
nptperyear = 36,
prefix = "", titlestr = titlestr, show = TRUE),
error = function(e){
message(sprintf("e: [%04d] %s", j, e$message))
}
)
}
# })
df = l_pheno %>% set_names(inds[1:length(l_pheno)]) %>% rm_empty() %>% melt_list("I_grid")
# outfile = sprintf("%s/phenofit_TP_SPOT_(1998-2013)_112deg_[%04d].csv", outdir, grp)
# fwrite(df, outfile)
}
# InitCluster(12)
grps = 65:1
temp <- foreach(inds = l_ind[grps], grp = grps, icount(1)) %do% {
runningId(grp)
I_begin  = min(inds)
n_time   = length(inds)
mat_NDVI = NDVI[inds, ] %>% t()
mat_qc   = QC[inds, ]   %>% t()
# browser()
# profvis::profvis({
l_pheno = foreach(y = mat_NDVI, qc = mat_qc, j = icount(1)) %do% {
Ipaper::runningId(j)
# titlestr = "a"
titlestr = glue("[{j}]")
d_qc = qc_summary(qc, wmin = 0.2)
# browser()
# if titlestr == NULL, then no figure produced; if show, then it will be open
ans = tryCatch(
phenofit_site(y = y[, 1], t = date, w = d_qc$w, QC_flag = d_qc$QC_flag,
nptperyear = 36,
prefix = "", titlestr = titlestr, show = TRUE),
error = function(e){
message(sprintf("e: [%04d] %s", j, e$message))
}
)
}
# })
df = l_pheno %>% set_names(inds[1:length(l_pheno)]) %>% rm_empty() %>% melt_list("I_grid")
# outfile = sprintf("%s/phenofit_TP_SPOT_(1998-2013)_112deg_[%04d].csv", outdir, grp)
# fwrite(df, outfile)
}
qc
y
ploy(y)
plot(y)
View(NDVI)
inds
View(mat_NDVI)
rowMeans(mat_NDVI)
l_ind    <- chunk(seq_along(I_mod), 70)
# InitCluster(12)
grps = 65:1
temp <- foreach(inds = l_ind[grps], grp = grps, icount(1)) %do% {
runningId(grp)
I_begin  = min(inds)
n_time   = length(inds)
mat_NDVI = NDVI[inds, ] %>% t()
mat_qc   = QC[inds, ]   %>% t()
# browser()
# profvis::profvis({
l_pheno = foreach(y = mat_NDVI, qc = mat_qc, j = icount(1)) %do% {
Ipaper::runningId(j)
# titlestr = "a"
titlestr = glue("[{j}]")
d_qc = qc_summary(qc, wmin = 0.2)
# browser()
# if titlestr == NULL, then no figure produced; if show, then it will be open
ans = tryCatch(
phenofit_site(y = y[, 1], t = date, w = d_qc$w, QC_flag = d_qc$QC_flag,
nptperyear = 36,
prefix = "", titlestr = titlestr, show = TRUE),
error = function(e){
message(sprintf("e: [%04d] %s", j, e$message))
}
)
}
# })
df = l_pheno %>% set_names(inds[1:length(l_pheno)]) %>% rm_empty() %>% melt_list("I_grid")
# outfile = sprintf("%s/phenofit_TP_SPOT_(1998-2013)_112deg_[%04d].csv", outdir, grp)
# fwrite(df, outfile)
}
Y
y
# NC file
load("INPUT/TP_MOD13C1_020deg (200002-201909).rda")
View(NDVI)
source('E:/Research/phenology/phenofit.shiny/test/data_phenofit_TP_MOD13C1.R', encoding = 'UTF-8', echo=TRUE)
source('E:/Research/phenology/phenofit.shiny/test/data_phenofit_TP_MOD13C1.R', encoding = 'UTF-8', echo=TRUE)
devtools::load_all(".")
y
plot(y)
plot(date)
date
source('E:/Research/phenology/phenofit.shiny/test/data_phenofit_TP_MOD13C1.R', encoding = 'UTF-8', echo=TRUE)
date
# 只到2015即可
date  = map(2000:2018, get_date_MODIS) %>% do.call(c, .)
# browser()
# if titlestr == NULL, then no figure produced; if show, then it will be open
ans = tryCatch(
phenofit_site(y = y[, 1], t = date, w = d_qc$w, QC_flag = d_qc$QC_flag,
nptperyear = 36,
prefix = "", titlestr = titlestr, show = TRUE),
error = function(e){
message(sprintf("e: [%04d] %s", j, e$message))
}
)
mat_NDVI = t(NDVI[inds, ]/1000)
# browser()
# profvis::profvis({
l_pheno = foreach(y = mat_NDVI, qc = mat_qc, j = icount(1)) %do% {
Ipaper::runningId(j)
# titlestr = "a"
titlestr = glue("[{j}]")
d_qc = qc_summary(qc, wmin = 0.2)
# browser()
# if titlestr == NULL, then no figure produced; if show, then it will be open
ans = tryCatch(
phenofit_site(y = y[, 1], t = date, w = d_qc$w, QC_flag = d_qc$QC_flag,
nptperyear = 36,
prefix = "", titlestr = titlestr, show = TRUE),
error = function(e){
message(sprintf("e: [%04d] %s", j, e$message))
}
)
}
devtools::load_all(".")
# browser()
# if titlestr == NULL, then no figure produced; if show, then it will be open
ans = tryCatch(
phenofit_site(y = y[, 1], t = date, w = d_qc$w, QC_flag = d_qc$QC_flag,
nptperyear = 36,
prefix = "", titlestr = titlestr, show = TRUE),
error = function(e){
message(sprintf("e: [%04d] %s", j, e$message))
}
)
mat_NDVI = t(NDVI[inds, ]/1e4)
# browser()
# profvis::profvis({
l_pheno = foreach(y = mat_NDVI, qc = mat_qc, j = icount(1)) %do% {
Ipaper::runningId(j)
# titlestr = "a"
titlestr = glue("[{j}]")
d_qc = qc_summary(qc, wmin = 0.2)
# browser()
# if titlestr == NULL, then no figure produced; if show, then it will be open
ans = tryCatch(
phenofit_site(y = y[, 1], t = date, w = d_qc$w, QC_flag = d_qc$QC_flag,
nptperyear = 36,
prefix = "", titlestr = titlestr, show = TRUE),
error = function(e){
message(sprintf("e: [%04d] %s", j, e$message))
}
)
}
library(devtools)
use_git_ignore(".Rhistory")
